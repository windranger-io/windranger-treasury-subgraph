specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: PerformanceBondMediator
    network: {{ network }}
    source:
      address: "{{ contracts.bondMediator.address }}"
      abi: PerformanceBondMediator
      startBlock: {{ contracts.bondMediator.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Bond
        - Bond__DAO
        - Bond__DAO__CollateralWhitelist
        - Bond__DAO__Metadata
        - Bond__DAO__Role
        - Bond__Role
        - BondFactory
        - BondMediator
        - BondMediator__Sweep
      abis:
        - name: PerformanceBondMediator
          file: ./abis/PerformanceBondMediator.json
      eventHandlers:
        - event: AddPerformanceBond(indexed uint256,indexed address,indexed address)
          handler: handleAddPerformanceBond
        - event: AddCollateralWhitelist(indexed uint256,indexed address,indexed address)
          handler: handleAddCollateralWhitelist
        - event: AdminChanged(address,address)
          handler: handleAdminChanged
        - event: BeaconUpgraded(indexed address)
          handler: handleBeaconUpgraded
        - event: BeneficiaryUpdate(indexed address,indexed address)
          handler: handleBeneficiaryUpdate
        - event: PerformanceBondCreatorUpdate(indexed address,indexed address,indexed address)
          handler: handlePerformanceBondCreatorUpdate
        - event: CreateDao(indexed uint256,indexed address,indexed address)
          handler: handleCreateDao
        - event: DaoMetaDataUpdate(indexed uint256,string,indexed address)
          handler: handleDaoMetaDataUpdate
        - event: DaoTreasuryUpdate(indexed uint256,indexed address,indexed address)
          handler: handleDaoTreasuryUpdate
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: GrantDaoRole(indexed uint256,indexed bytes32,address,indexed address)
          handler: handleGrantDaoRole
        - event: GrantGlobalRole(bytes32,address,indexed address)
          handler: handleGrantGlobalRole
        - event: Initialized(uint8)
          handler: handleInitialized
        - event: Paused(address)
          handler: handlePaused
        - event: RemoveCollateralWhitelist(indexed uint256,indexed address,indexed address)
          handler: handleRemoveCollateralWhitelist
        - event: RevokeDaoRole(indexed uint256,indexed bytes32,address,indexed address)
          handler: handleRevokeDaoRole
        - event: RevokeGlobalRole(indexed bytes32,address,indexed address)
          handler: handleRevokeGlobalRole
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: Upgraded(indexed address)
          handler: handleUpgraded
      file: ./src/bondMediator.ts
  - kind: ethereum/contract
    name: PerformanceBondFactory
    network: {{ network }}
    source:
      address: "{{ contracts.bondFactory.address }}"
      abi: PerformanceBondFactory
      startBlock: {{ contracts.bondFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Bond
        - Bond__Metadata
        - Bond__Configuration
        - Bond__RewardPool
        - BondFactory
        - BondFactory__Sweep
      abis:
        - name: PerformanceBondFactory
          file: ./abis/PerformanceBondFactory.json
      eventHandlers:
        - event: BeneficiaryUpdate(indexed address,indexed address)
          handler: handleBeneficiaryUpdate
        - event: CreatePerformanceBond(indexed address,(string,string,string),(uint256,address,uint256,uint256),(address,uint128,uint128)[],indexed address,indexed address)
          handler: handleCreatePerformanceBond
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/bondFactory.ts
  - kind: ethereum/contract
    name: StakingPoolMediator
    network: {{ network }}
    source:
      address: "{{ contracts.stakingPoolMediator.address }}"
      abi: StakingPoolMediator
      startBlock: {{ contracts.stakingPoolMediator.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakingPool
        - StakingPool__DAO
        - StakingPool__DAO__CollateralWhitelist
        - StakingPool__DAO__Metadata
        - StakingPool__DAO__Role
        - StakingPool__Role
        - StakingPoolFactory
        - StakingPoolMediator
        - StakingPoolMediator__Sweep
      abis:
        - name: StakingPoolMediator
          file: ./abis/StakingPoolMediator.json
      eventHandlers:
        - event: AddCollateralWhitelist(indexed uint256,indexed address,indexed address)
          handler: handleAddCollateralWhitelist
        - event: AddStakingPool(indexed uint256,indexed address,indexed address)
          handler: handleAddStakingPool
        - event: AdminChanged(address,address)
          handler: handleAdminChanged
        - event: BeaconUpgraded(indexed address)
          handler: handleBeaconUpgraded
        - event: BeneficiaryUpdate(indexed address,indexed address)
          handler: handleBeneficiaryUpdate
        - event: CreateDao(indexed uint256,indexed address,indexed address)
          handler: handleCreateDao
        - event: DaoMetaDataUpdate(indexed uint256,string,indexed address)
          handler: handleDaoMetaDataUpdate
        - event: DaoTreasuryUpdate(indexed uint256,indexed address,indexed address)
          handler: handleDaoTreasuryUpdate
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: GrantDaoRole(indexed uint256,indexed bytes32,address,indexed address)
          handler: handleGrantDaoRole
        - event: GrantGlobalRole(bytes32,address,indexed address)
          handler: handleGrantGlobalRole
        - event: Initialized(uint8)
          handler: handleInitialized
        - event: Paused(address)
          handler: handlePaused
        - event: RemoveCollateralWhitelist(indexed uint256,indexed address,indexed address)
          handler: handleRemoveCollateralWhitelist
        - event: RevokeDaoRole(indexed uint256,indexed bytes32,address,indexed address)
          handler: handleRevokeDaoRole
        - event: RevokeGlobalRole(indexed bytes32,address,indexed address)
          handler: handleRevokeGlobalRole
        - event: StakingPoolCreatorUpdate(indexed address,indexed address,indexed address)
          handler: handleStakingPoolCreatorUpdate
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: Upgraded(indexed address)
          handler: handleUpgraded
      file: ./src/stakingPoolMediator.ts
  - kind: ethereum/contract
    name: StakingPoolFactory
    network: {{ network }}
    source:
      address: "{{ contracts.stakingPoolFactory.address }}"
      abi: StakingPoolFactory
      startBlock: {{ contracts.stakingPoolFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakingPool
        - StakingPoolFactory
        - StakingPoolFactory__Sweep
        - StakingPool__Reward
      abis:
        - name: StakingPoolFactory
          file: ./abis/StakingPoolFactory.json
      eventHandlers:
        - event: BeneficiaryUpdate(indexed address,indexed address)
          handler: handleBeneficiaryUpdate
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: StakingPoolCreated(indexed address,(uint256,uint128,uint128,uint128,uint32,uint32,address,address,(address,uint256,uint256)[],uint8),indexed address)
          handler: handleStakingPoolCreated
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/stakingPoolFactory.ts
templates:
  - kind: ethereum/contract
    name: PerformanceBondFactory
    network: {{ network }}
    source:
      abi: PerformanceBondFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/bondFactory.ts
      entities:
        - Bond
        - Bond__Metadata
        - Bond__Configuration
        - Bond__RewardPool
        - BondFactory
        - BondFactory__Sweep
      abis:
        - name: PerformanceBondFactory
          file: ./abis/PerformanceBondFactory.json
      eventHandlers:
        - event: BeneficiaryUpdate(indexed address,indexed address)
          handler: handleBeneficiaryUpdate
        - event: CreatePerformanceBond(indexed address,(string,string,string),(uint256,address,uint256,uint256),(address,uint128,uint128)[],indexed address,indexed address)
          handler: handleCreatePerformanceBond
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
  - kind: ethereum/contract
    name: SingleCollateralMultiRewardPerformanceBond
    network: {{ network }}
    source:
      abi: SingleCollateralMultiRewardPerformanceBond
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/bond.ts
      entities:
        - Bond
        - Bond__Metadata
        - Bond__Configuration
        - Bond__Deposit
        - Bond__Redemption
        - Bond__RewardClaimed
        - Bond__RewardDebt
        - Bond__RewardPool
        - Bond__SlashDeposit
        - Bond__Sweep
        - Bond__Transfer
      abis:
        - name: SingleCollateralMultiRewardPerformanceBond
          file: ./abis/SingleCollateralMultiRewardPerformanceBond.json
      eventHandlers:
        - event: AllowRedemption(indexed address,string)
          handler: handleAllowRedemption
        - event: ClaimReward(indexed address,uint256,indexed address)
          handler: handleClaimReward
        - event: Deposit(indexed address,indexed address,uint256)
          handler: handleDeposit
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: Expire(indexed address,indexed address,uint256,indexed address)
          handler: handleExpire
        - event: FullCollateral(indexed address,uint256,indexed address)
          handler: handleFullCollateral
        - event: MetaDataUpdate(string,indexed address)
          handler: handleMetaDataUpdate
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: PartialCollateral(indexed address,uint256,indexed address,uint256,indexed address)
          handler: handlePartialCollateral
        - event: Paused(address)
          handler: handlePaused
        - event: RedeemableUpdate(bool,string,indexed address)
          handler: handleRedeemableUpdate
        - event: Redemption(indexed address,indexed address,uint256,indexed address,uint256)
          handler: handleRedemption
        - event: RedemptionTimestampUpdate(uint256,indexed address)
          handler: handleRedemptionTimestampUpdate
        - event: RegisterReward(indexed address,uint256,uint256,indexed address)
          handler: handleRegisterReward
        - event: RewardDebt(indexed address,indexed address,uint256,indexed address)
          handler: handleRewardDebt
        - event: RewardTimeLockUpdate(indexed address,uint256,indexed address)
          handler: handleRewardTimeLockUpdate
        - event: SlashDeposits(indexed address,uint256,string,indexed address)
          handler: handleSlashDeposits
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: WithdrawCollateral(indexed address,indexed address,uint256,indexed address)
          handler: handleWithdrawCollateral
  - kind: ethereum/contract
    name: StakingPoolFactory
    network: {{ network }}
    source:
      abi: StakingPoolFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakingPool
        - StakingPool__Reward
        - StakingPoolFactory
        - StakingPoolFactory__Sweep
      abis:
        - name: StakingPoolFactory
          file: ./abis/StakingPoolFactory.json
      eventHandlers:
        - event: BeneficiaryUpdate(indexed address,indexed address)
          handler: handleBeneficiaryUpdate
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: StakingPoolCreated(indexed address,(uint256,uint128,uint128,uint128,uint32,uint32,address,address,(address,uint256,uint256)[],uint8),indexed address)
          handler: handleStakingPoolCreated
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/stakingPoolFactory.ts
  - kind: ethereum/contract
    name: StakingPool
    network: {{ network }}
    source:
      abi: StakingPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/stakingPool.ts
      entities:
        - StakingPool
        - StakingPool__Deposit
        - StakingPool__Reward
        - StakingPool__RewardWithdrawal
        - StakingPool__Sweep
        - StakingPool__Withdrawal
      abis:
        - name: StakingPool
          file: ./abis/StakingPool.json
      eventHandlers:
        - event: BeneficiaryUpdate(indexed address,indexed address)
          handler: handleBeneficiaryUpdate
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: ERC20Sweep(indexed address,indexed address,uint256,indexed address)
          handler: handleERC20Sweep
        - event: EmergencyMode(indexed address)
          handler: handleEmergencyMode
        - event: InitializeRewards(address,uint256)
          handler: handleInitializeRewards
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: RewardsAvailableTimestamp(uint32)
          handler: handleRewardsAvailableTimestamp
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: WithdrawRewards(indexed address,address,uint256)
          handler: handleWithdrawRewards
        - event: WithdrawStake(indexed address,uint256)
          handler: handleWithdrawStake
